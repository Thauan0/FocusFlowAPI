# Logs
logs
*.log
npm-debug.log*
yarn-error.log
pnpm-debug.log
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (if you were using bower)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.*
!.env.example  # Important: Exclui .env, mas NÃO exclui um .env.example se você criar um

# DS_Store file generated by macOS
.DS_Store
._*

# Thumbnails database files (Windows)
Thumbs.db
ehthumbs.db

# Folder config file (Windows)
Desktop.ini

# Temporary files
*.tmp
*~

# VS Code specific directory
.vscode/
!.vscode/settings.json # Opcional: você pode querer versionar as settings
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json # Opcional: recomenda extensões para o projeto

# JetBrains IDEs specific directory (WebStorm, IntelliJ, etc.)
.idea/

# Build output directory (se você adicionar um passo de build)
dist/
build/
out/